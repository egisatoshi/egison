--
-- This file has been auto-generated by egison-translator.
--

tensorOrder %A := length (tensorShape A)

unitTensor ns := generateTensor kroneckerDelta ns

scalarToTensor x ns := x * unitTensor ns

zeroTensor ns := generateTensor (cambda xs -> 0) ns

b..' %t1 %t2 := contract add' (mul' t1 t2)

b.. %t1 %t2 := contract (+) (t1 * t2)

.' := cambda xs -> foldl b..' (car xs) (cdr xs)

. :=
  cambda xs ->
    match xs as list something with
      | _ -> foldl b.. (car xs) (cdr xs)

T.+ %t1 %t2 :=
  tensor (tensorShape t1) (map2 (+) (tensorToList t1) (tensorToList t2))

T.- %t1 %t2 :=
  tensor (tensorShape t1) (map2 (-) (tensorToList t1) (tensorToList t2))
